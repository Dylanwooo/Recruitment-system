<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sz.iecas.dao.JobInfoMapper">
  <resultMap id="BaseResultMap" type="sz.iecas.model.JobInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="hot" jdbcType="INTEGER" property="hot" />
    <result column="minSalary" jdbcType="INTEGER" property="minsalary" />
    <result column="publishTime" jdbcType="VARCHAR" property="publishtime" />
    <result column="endTime" jdbcType="VARCHAR" property="endtime" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="departmentId" jdbcType="INTEGER" property="departmentid" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="degree" jdbcType="INTEGER" property="degree" />
    <result column="job_status" jdbcType="INTEGER" property="jobStatus" />
    <result column="major_name" jdbcType="VARCHAR" property="majorName" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="sz.iecas.model.JobInfoWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="job_desc" jdbcType="LONGVARCHAR" property="jobDesc" />
    <result column="job_require" jdbcType="LONGVARCHAR" property="jobRequire" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, type, hot, minSalary, publishTime, endTime, num, departmentId, address, 
    degree, job_status, major_name
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    job_desc, job_require
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="sz.iecas.model.JobInfoExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from job_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    order by hot Desc, publishtime DESC 
  </select>
  <select id="selectByExample" parameterType="sz.iecas.model.JobInfoExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from job_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from job_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from job_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="sz.iecas.model.JobInfoExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from job_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="sz.iecas.model.JobInfoWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into job_info (id, name, type, 
      hot, minSalary, publishTime, 
      endTime, num, departmentId, 
      address, degree, job_status, 
      major_name, job_desc, job_require
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{hot,jdbcType=INTEGER}, #{minsalary,jdbcType=INTEGER}, #{publishtime,jdbcType=VARCHAR}, 
      #{endtime,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, #{departmentid,jdbcType=INTEGER}, 
      #{address,jdbcType=VARCHAR}, #{degree,jdbcType=INTEGER}, #{jobStatus,jdbcType=INTEGER}, 
      #{majorName,jdbcType=VARCHAR}, #{jobDesc,jdbcType=LONGVARCHAR}, #{jobRequire,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="sz.iecas.model.JobInfoWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into job_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="hot != null">
        hot,
      </if>
      <if test="minsalary != null">
        minSalary,
      </if>
      <if test="publishtime != null">
        publishTime,
      </if>
      <if test="endtime != null">
        endTime,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="departmentid != null">
        departmentId,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="jobStatus != null">
        job_status,
      </if>
      <if test="majorName != null">
        major_name,
      </if>
      <if test="jobDesc != null">
        job_desc,
      </if>
      <if test="jobRequire != null">
        job_require,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="hot != null">
        #{hot,jdbcType=INTEGER},
      </if>
      <if test="minsalary != null">
        #{minsalary,jdbcType=INTEGER},
      </if>
      <if test="publishtime != null">
        #{publishtime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null">
        #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null">
        #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=INTEGER},
      </if>
      <if test="jobStatus != null">
        #{jobStatus,jdbcType=INTEGER},
      </if>
      <if test="majorName != null">
        #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="jobDesc != null">
        #{jobDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="jobRequire != null">
        #{jobRequire,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="sz.iecas.model.JobInfoExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from job_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update job_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.hot != null">
        hot = #{record.hot,jdbcType=INTEGER},
      </if>
      <if test="record.minsalary != null">
        minSalary = #{record.minsalary,jdbcType=INTEGER},
      </if>
      <if test="record.publishtime != null">
        publishTime = #{record.publishtime,jdbcType=VARCHAR},
      </if>
      <if test="record.endtime != null">
        endTime = #{record.endtime,jdbcType=VARCHAR},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.departmentid != null">
        departmentId = #{record.departmentid,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=INTEGER},
      </if>
      <if test="record.jobStatus != null">
        job_status = #{record.jobStatus,jdbcType=INTEGER},
      </if>
      <if test="record.majorName != null">
        major_name = #{record.majorName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobDesc != null">
        job_desc = #{record.jobDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.jobRequire != null">
        job_require = #{record.jobRequire,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update job_info
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      hot = #{record.hot,jdbcType=INTEGER},
      minSalary = #{record.minsalary,jdbcType=INTEGER},
      publishTime = #{record.publishtime,jdbcType=VARCHAR},
      endTime = #{record.endtime,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      departmentId = #{record.departmentid,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=INTEGER},
      job_status = #{record.jobStatus,jdbcType=INTEGER},
      major_name = #{record.majorName,jdbcType=VARCHAR},
      job_desc = #{record.jobDesc,jdbcType=LONGVARCHAR},
      job_require = #{record.jobRequire,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update job_info
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      hot = #{record.hot,jdbcType=INTEGER},
      minSalary = #{record.minsalary,jdbcType=INTEGER},
      publishTime = #{record.publishtime,jdbcType=VARCHAR},
      endTime = #{record.endtime,jdbcType=VARCHAR},
      num = #{record.num,jdbcType=INTEGER},
      departmentId = #{record.departmentid,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=INTEGER},
      job_status = #{record.jobStatus,jdbcType=INTEGER},
      major_name = #{record.majorName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="sz.iecas.model.JobInfoWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update job_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="hot != null">
        hot = #{hot,jdbcType=INTEGER},
      </if>
      <if test="minsalary != null">
        minSalary = #{minsalary,jdbcType=INTEGER},
      </if>
      <if test="publishtime != null">
        publishTime = #{publishtime,jdbcType=VARCHAR},
      </if>
      <if test="endtime != null">
        endTime = #{endtime,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="departmentid != null">
        departmentId = #{departmentid,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=INTEGER},
      </if>
      <if test="jobStatus != null">
        job_status = #{jobStatus,jdbcType=INTEGER},
      </if>
      <if test="majorName != null">
        major_name = #{majorName,jdbcType=VARCHAR},
      </if>
      <if test="jobDesc != null">
        job_desc = #{jobDesc,jdbcType=LONGVARCHAR},
      </if>
      <if test="jobRequire != null">
        job_require = #{jobRequire,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="sz.iecas.model.JobInfoWithBLOBs">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update job_info
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER},
      minSalary = #{minsalary,jdbcType=INTEGER},
      publishTime = #{publishtime,jdbcType=VARCHAR},
      endTime = #{endtime,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      departmentId = #{departmentid,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=INTEGER},
      job_status = #{jobStatus,jdbcType=INTEGER},
      major_name = #{majorName,jdbcType=VARCHAR},
      job_desc = #{jobDesc,jdbcType=LONGVARCHAR},
      job_require = #{jobRequire,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="sz.iecas.model.JobInfo">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update job_info
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      hot = #{hot,jdbcType=INTEGER},
      minSalary = #{minsalary,jdbcType=INTEGER},
      publishTime = #{publishtime,jdbcType=VARCHAR},
      endTime = #{endtime,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      departmentId = #{departmentid,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=INTEGER},
      job_status = #{jobStatus,jdbcType=INTEGER},
      major_name = #{majorName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>